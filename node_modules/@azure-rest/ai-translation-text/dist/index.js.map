{"version":3,"file":"index.js","sources":["../src/authentication.ts","../src/customClient.ts","../src/generated/isUnexpected.ts","../src/generated/serializeHelper.ts","../src/index.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AzureKeyCredential } from \"@azure/core-auth\";\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\nconst APIM_KEY_HEADER_NAME = \"Ocp-Apim-Subscription-Key\";\nconst APIM_REGION_HEADER_NAME = \"Ocp-Apim-Subscription-Region\";\n\nexport interface TranslatorCredential {\n  key: string;\n  region: string;\n}\n\nexport class TranslatorAuthenticationPolicy implements PipelinePolicy {\n  name: string = \"TranslatorAuthenticationPolicy\";\n  credential: TranslatorCredential;\n\n  constructor(credential: TranslatorCredential) {\n    this.credential = credential;\n  }\n\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n    request.headers.set(APIM_KEY_HEADER_NAME, this.credential.key);\n    request.headers.set(APIM_REGION_HEADER_NAME, this.credential.region);\n\n    return next(request);\n  }\n}\n\nexport class TranslatorAzureKeyAuthenticationPolicy implements PipelinePolicy {\n  name: string = \"TranslatorAzureKeyAuthenticationPolicy\";\n  credential: AzureKeyCredential;\n\n  constructor(credential: AzureKeyCredential) {\n    this.credential = credential;\n  }\n\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n    request.headers.set(APIM_KEY_HEADER_NAME, this.credential.key);\n\n    return next(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getClient, ClientOptions } from \"@azure-rest/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport { PipelineRequest, PipelineResponse, SendRequest } from \"@azure/core-rest-pipeline\";\nimport { TextTranslationClient } from \"./generated/clientDefinitions\";\nimport {\n  TranslatorCredential,\n  TranslatorAuthenticationPolicy,\n  TranslatorAzureKeyAuthenticationPolicy,\n} from \"./authentication\";\nimport { AzureKeyCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\n\nconst DEFAULT_SCOPE = \"https://cognitiveservices.azure.com/.default\";\nconst DEFAULT_ENPOINT = \"https://api.cognitive.microsofttranslator.com\";\nconst PLATFORM_HOST = \"cognitiveservices\";\nconst PLATFORM_PATH = \"/translator/text/v3.0\";\n\nfunction isKeyCredential(credential: any): credential is KeyCredential {\n  return (credential as KeyCredential)?.key !== undefined;\n}\n\nfunction isTranslatorKeyCredential(credential: any): credential is TranslatorCredential {\n  return (credential as TranslatorCredential)?.key !== undefined;\n}\n\n/** Policy that sets the api-version (or equivalent) to reflect the library version. */\nconst apiVersionPolicy = {\n  name: \"MTApiVersionPolicy\",\n  async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n    const param = request.url.split(\"?\");\n    if (param.length > 1) {\n      const newParams = param[1].split(\"&\");\n      newParams.push(\"api-version=3.0\");\n      request.url = param[0] + \"?\" + newParams.join(\"&\");\n    } else {\n      // no query parameters in request url\n      request.url = param[0] + \"?api-version=3.0\";\n    }\n    return next(request);\n  },\n};\n\n/**\n * Initialize a new instance of `TextTranslationClient`\n * @param endpoint type: string, Supported Text Translation endpoints (protocol and hostname, for example:\n *     https://api.cognitive.microsofttranslator.com).\n * @param options type: ClientOptions, the parameter for all optional parameters\n */\nexport default function createClient(\n  endpoint: undefined | string,\n  credential: undefined | TranslatorCredential | KeyCredential | TokenCredential = undefined,\n  options: ClientOptions = {}\n): TextTranslationClient {\n  let serviceEndpoint: string;\n  if (!endpoint) {\n    serviceEndpoint = DEFAULT_ENPOINT;\n  } else if (endpoint.toLowerCase().indexOf(PLATFORM_HOST) !== -1) {\n    serviceEndpoint = `${endpoint}${PLATFORM_PATH}`;\n  } else {\n    serviceEndpoint = endpoint;\n  }\n\n  const baseUrl = options.baseUrl ?? `${serviceEndpoint}`;\n\n  const userAgentInfo = `azsdk-js-ai-translation-text-rest/1.0.0-beta.1`;\n  const userAgentPrefix =\n    options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n      ? `${options.userAgentOptions.userAgentPrefix} ${userAgentInfo}`\n      : `${userAgentInfo}`;\n  options = {\n    ...options,\n    userAgentOptions: {\n      userAgentPrefix,\n    },\n  };\n\n  const client = getClient(baseUrl, options) as TextTranslationClient;\n  client.pipeline.addPolicy(apiVersionPolicy);\n\n  if (isTranslatorKeyCredential(credential)) {\n    const mtAuthneticationPolicy = new TranslatorAuthenticationPolicy(\n      credential as TranslatorCredential\n    );\n    client.pipeline.addPolicy(mtAuthneticationPolicy);\n  } else if (isKeyCredential(credential)) {\n    const mtKeyAuthenticationPolicy = new TranslatorAzureKeyAuthenticationPolicy(\n      credential as AzureKeyCredential\n    );\n    client.pipeline.addPolicy(mtKeyAuthenticationPolicy);\n  } else if (credential) {\n    client.pipeline.addPolicy(\n      coreRestPipeline.bearerTokenAuthenticationPolicy({\n        credential: credential as TokenCredential,\n        scopes: DEFAULT_SCOPE,\n      })\n    );\n  }\n\n  return client;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  GetLanguages200Response,\n  GetLanguagesDefaultResponse,\n  Translate200Response,\n  TranslateDefaultResponse,\n  Transliterate200Response,\n  TransliterateDefaultResponse,\n  FindSentenceBoundaries200Response,\n  FindSentenceBoundariesDefaultResponse,\n  LookupDictionaryEntries200Response,\n  LookupDictionaryEntriesDefaultResponse,\n  LookupDictionaryExamples200Response,\n  LookupDictionaryExamplesDefaultResponse,\n} from \"./responses\";\n\nconst responseMap: Record<string, string[]> = {\n  \"GET /languages\": [\"200\"],\n  \"POST /translate\": [\"200\"],\n  \"POST /transliterate\": [\"200\"],\n  \"POST /breaksentence\": [\"200\"],\n  \"POST /dictionary/lookup\": [\"200\"],\n  \"POST /dictionary/examples\": [\"200\"],\n};\n\nexport function isUnexpected(\n  response: GetLanguages200Response | GetLanguagesDefaultResponse\n): response is GetLanguagesDefaultResponse;\nexport function isUnexpected(\n  response: Translate200Response | TranslateDefaultResponse\n): response is TranslateDefaultResponse;\nexport function isUnexpected(\n  response: Transliterate200Response | TransliterateDefaultResponse\n): response is TransliterateDefaultResponse;\nexport function isUnexpected(\n  response:\n    | FindSentenceBoundaries200Response\n    | FindSentenceBoundariesDefaultResponse\n): response is FindSentenceBoundariesDefaultResponse;\nexport function isUnexpected(\n  response:\n    | LookupDictionaryEntries200Response\n    | LookupDictionaryEntriesDefaultResponse\n): response is LookupDictionaryEntriesDefaultResponse;\nexport function isUnexpected(\n  response:\n    | LookupDictionaryExamples200Response\n    | LookupDictionaryExamplesDefaultResponse\n): response is LookupDictionaryExamplesDefaultResponse;\nexport function isUnexpected(\n  response:\n    | GetLanguages200Response\n    | GetLanguagesDefaultResponse\n    | Translate200Response\n    | TranslateDefaultResponse\n    | Transliterate200Response\n    | TransliterateDefaultResponse\n    | FindSentenceBoundaries200Response\n    | FindSentenceBoundariesDefaultResponse\n    | LookupDictionaryEntries200Response\n    | LookupDictionaryEntriesDefaultResponse\n    | LookupDictionaryExamples200Response\n    | LookupDictionaryExamplesDefaultResponse\n): response is\n  | GetLanguagesDefaultResponse\n  | TranslateDefaultResponse\n  | TransliterateDefaultResponse\n  | FindSentenceBoundariesDefaultResponse\n  | LookupDictionaryEntriesDefaultResponse\n  | LookupDictionaryExamplesDefaultResponse {\n  const lroOriginal = response.headers[\"x-ms-original-url\"];\n  const url = new URL(lroOriginal ?? response.request.url);\n  const method = response.request.method;\n  const pathDetails = responseMap[`${method} ${url.pathname}`];\n  if (!pathDetails) {\n    return true;\n  }\n  return !pathDetails.includes(response.status);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function buildMultiCollection(\n  queryParameters: string[],\n  parameterName: string\n) {\n  return queryParameters\n    .map((item, index) => {\n      if (index === 0) {\n        return item;\n      }\n      return `${parameterName}=${item}`;\n    })\n    .join(\"&\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport TextTranslation from \"./customClient\";\n\nexport * from \"./customClient\";\nexport * from \"./generated/parameters\";\nexport * from \"./generated/responses\";\nexport * from \"./generated/clientDefinitions\";\nexport * from \"./generated/isUnexpected\";\nexport * from \"./generated/models\";\nexport * from \"./generated/outputModels\";\nexport * from \"./generated/serializeHelper\";\nexport { TranslatorCredential } from \"./authentication\";\n\nexport default TextTranslation;\n"],"names":["getClient","coreRestPipeline"],"mappings":"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"}